#!/bin/sh

###### Start X11 Session? ######

trysource() {
#shellcheck source=./scdmrc
	test -f "$1" -a -r "$1" && . "$1"
}

if [ -n "${COMMAND}" ]
then
	comm="$COMMAND"
	unset COMMAND
#shellcheck disable=SC2164
# disable warning about cd failure
	cd "$HOME"
        trysource "$HOME/.xprofile" || trysource /etc/xprofile
        $comm
        #shellcheck disable=SC2164
        cd "$HOME"
        trysource "$HOME/.xlogout" || trysource /etc/xlogout
	exit
fi


###### The real program ######

SELF="$(basename "$0")"

VERSION=v2.0

VT="$(tty | sed 's/^.*tty\([0-9]\+\)$/vt\1/g')"

warn() {
# !!! WARNING: don't ever feed user-supplied args into this function !!!
	fmt="${1%\\n}\\n"
	shift
# disable warning about variables in format string
# shellcheck disable=SC2059
	printf "$fmt" "$@" >&2
}

fail() {
	fmt="%s: ERROR: $1"
	shift
	warn "$fmt" "$SELF" "$@"
	warn 'Falling back to plain console session.'
	warn ''
	exec "$(sed -n "s/^$USER:.\+://gp" /etc/passwd)"
}

usage() {
	echo "Usage: $(basename "$0") [rcfile]" >&2
	exit "$1"
}

printsessions() {
	echo "$PRINTSESSIONS"
}

case "$1" in
	-h|--help )
		usage 0
		;;
	-t|--tty )
		if [ "$2" -eq "$VT" ] && [ "$DISPLAY" ] && [ "$TERM" != linux ]; then
			fail 'cannot open session on current terminal.'
	fi
	VT="$2"
	shift; shift
	;;
esac
if [ $# -gt 1 ]; then
	usage 1
elif [ $# -eq 1 ] && ! trysource "$1"; then
	fail 'cannot source config file:%' "$1"
fi

if [ -z "$SESSIONS" ]; then
	trysource "$HOME/.scdmrc" || trysource /etc/scdmrc || \
		fail "no config file!"
fi

SESSIONS="$(printf '%s\n%s\n' "$SESSIONS" "Exit:C:true" \
	     | sed -n -e '/^\s*$/d' -e 's/^\s*//g' \
	              -e '/^\s*[^:]\+:[XxCc]:[^:]\+\s*$/{p;d}' -e 's/^/\t  =>\t/gp')"

# check for correctness of SESSIONS
if echo "$SESSIONS" | grep -q '^\s\+=>\s\+'
then
	fail 'configuration corrupt:\n\tin SESSION="\n%s\n\t\t"' \
		"$(echo "$SESSIONS" | sed -e '/^\s\+=>\t/{p;d}' -e 's/^/\t\t/g')"
fi

SESS_NUM="$(echo "$SESSIONS" | wc -l)"

PRINTSESSIONS="$(echo "$SESSIONS" | awk -F : "{printf \"%$((SESS_NUM%10 + 1))i)  %-s\n\",NR,\$1}")"
maxw="$(printsessions | wc -L)"
PRINTSESSIONS="
$(printsessions | pr --columns=$((80/maxw)) --omit-header --width=80)
"

LINE=--------------------------------------------------------------------------------
printf "\n%39s %-39s\n%s\n\nSelect a session:\n" "$SELF" "$VERSION" "$LINE"

printsessions

i=0
while true
do
	if [ $i -ge 7 ]
	then
		printsessions
		i=0
	else
		i=$((i+1))
	fi
	printf '%s ' "${PS3:=>}"
	read -r n
	if [ -n "$n" ] && [ 1 -le "$n" ] && [ "$n" -le "$SESS_NUM" ]
	then
		break
	else
		printf "You must specify a number between 1 and %s!\n" "$SESS_NUM" >&2
	fi
done

SESSION="$(echo "$SESSIONS" | sed -n "${n}p")"

TYPE="${SESSION#*:}"
TYPE="${TYPE%:*}"
COMMAND="${SESSION##*:}"

export SCDM_SPAWN=$$
clear
printf 'Starting %s...\n' "${SESSION%%:*}"
if [ "$TYPE" = X ] || [ "$TYPE" = x ]
then
	export COMMAND
	exec startx "$(which "$0")" -- "$XSERVER_ARGS" "$VT" > /dev/null 2>&1
else
	cd "$HOME" || fail 'could not cd to: %s' "$HOME"
#shellcheck disable=SC2086
# do not complain about missing quotes
	exec $COMMAND
fi

# vim: noexpandtab sw=4 ts=4
